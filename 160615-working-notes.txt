To Do:
	check for UID and crop:
		109
			13
x			14
		111
			12
			13
			14
			15
x	Convert grades to GPA
x	find minimum state for each student
x	match ALEKS ID to UID
x	match state to student
x	hex to binary
x	binary to vector
x	assemble ordered matrix
x	assemble y vector
x	linear regression


Working:
149 students in 109 F14, (more than 109 F13, so using F14).
converted letter grades to GPA with
=IF(E2="A",4,IF(E2="A-",3.7,IF(E2="B+",3.3,IF(E2="B",3,IF(E2="B-",2.7,IF(E2="C+",2.3,IF(E2="C",2,IF(E2="C-",1.7,IF(E2="D",1,IF(E2="F",0,"Error!"))))))))))

XXRAU-FK9TU is the ALEKS class code for CH109 F14
This class used genchema.5
made new folder ALEKS_initial_states
copied the XXRAU-FK9TU data to the new folder as 14CH109.xls
Deleted unneeded columns and columns that were under merged cells (don't know why they were there).
Sorted by ID, then by date
Deleting all but first row for each student.
	most have initial assessments, some don't
	for those without initial assessments, I'll use the previously learned state column.
Deleted all columns except ID and assessed state (some of which were shifted over from previous state if it wasn't an initial assessment).
Copied over UID and ALEKS IDs from ALEKS class roster.
Manually matched them up
	3 didn't match:
	1 missing a UID
	2 extra UID (one was YLIU526 vs. YLIU519)
Deleted extra
Deleted YLiu user: I don't know what's going on there
Deleted extra data from ALEKS that didn't have a class grade (though could possibly be interesting to count them as dropping somehow (could be done more easily if I moved to a classification system as opposed to a linear regression)).
Copied states and grades to new CSV in folder combined
Copied hstate to bstate Mathematica function to new notebook.
Imported states and grades as "CSV" type (saved as CSV from Calc).
Applied function to convert states to binary lists.
Split states and grades in a matrix and vector respectively.
Did linear regression of the form LinearModelFit[{ch10914X, ch10914y}]
Gets an answer, but I now realize that will fit 463 parameters (462 items and 1 bias), but with only 150 kids or so, the problem is overdetermined.

Shoot.

Can at least cut out the items that no one in the class(es) knows, but that only brings it down to 272 items even for just this one class. Could further cut down to ones that large portions at least have (and remove ones they all have).

Another idea: the thing is split into sections like algebra, math, atom, acid, etc. Could be interesting to separate each and see if one group can be reasonably predictive. Possibly combine two that seem predictive. Could cut down on the number of parameters but also still be relevant/interesting.
